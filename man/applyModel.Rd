% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ApplyPlp.R
\name{applyModel}
\alias{applyModel}
\title{Apply train model on new data
Apply a Patient Level Prediction model on Patient Level Prediction Data and get the predicted risk
in [0,1] for each person in the population. If the user inputs a population with an outcomeCount
column then the function also returns the evaluation of the prediction (AUC, brier score,
calibration)}
\usage{
applyModel(population, plpData, plpModel, calculatePerformance = T,
  logConnection = NULL, databaseOutput = NULL, silent = F)
}
\arguments{
\item{population}{The population of people who you want to predict the risk for}

\item{plpData}{The plpData for the population}

\item{plpModel}{The trained PatientLevelPrediction model}

\item{calculatePerformance}{Whether to also calculate the performance metrics [default TRUE]}

\item{logConnection}{A connection to output any logging during the process}

\item{databaseOutput}{Whether to save the details into the prediction database}

\item{silent}{Whether to turn off progress reporting}
}
\description{
Apply train model on new data
Apply a Patient Level Prediction model on Patient Level Prediction Data and get the predicted risk
in [0,1] for each person in the population. If the user inputs a population with an outcomeCount
column then the function also returns the evaluation of the prediction (AUC, brier score,
calibration)
}
\examples{
\dontrun{
# load the model and data
plpData <- loadPlpData("C:/plpdata")
plpModel <- loadPlpModel("C:/plpmodel")

# use the same population settings as the model:
populationSettings <- plpModel$populationSettings
populationSettings$plpData <- plpData
population <- do.call(createStudyPopulation, populationSettings)

# get the prediction:
prediction <- applyModel(population, plpData, plpModel)$prediction
}
}
